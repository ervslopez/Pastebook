@model PastebookApp.Models.SignupViewModel

@Html.AntiForgeryToken()
@{
    Session["page"] = "Index";
}
<div class="container">
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="mainContent">
            @*LOGIN*@

            @section RightSide{
                <ul class="nav navbar-nav">
                    <li class="login">
                        @Html.ValidationMessage( "", new { @class = "text-danger", id = "loginPasswordError" })
                    </li>
                    <li class="login">
                        <input type="text" class = "form-control" id = "loginEmail" placeholder = "johndoe@google.com" />
                    </li>
                    <li class="login">
                        <input type="password" class = "form-control" id = "loginPassword" placeholder = "Password" />
                    </li>
                    <li class="login">
                        <button type="button" class="btn btn-primary" id="btnLogin" onclick="Login()">Log in</button>
                    </li>
                </ul>
            }

            @*REGISTER*@
            @using (Html.BeginForm("RegisterAccount", "Pastebook", FormMethod.Post))
            {
                <div class="col-md-5 pull-left">
                    PASTEBOOK
                </div>
                <div class="signupContent col-md-7 well well-lg pull-right">
                    <label class="loginAndSignupHeader">Sign Up</label>
                    <div class="col-md-12">
                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.signup.USER_NAME, new { htmlAttributes = new { @class = "form-control", placeholder = "User Name" } })
                                @Html.ValidationMessageFor(model => model.signup.USER_NAME, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.signup.FIRST_NAME, new { htmlAttributes = new { @class = "form-control", placeholder = "First Name" } })
                                @Html.ValidationMessageFor(model => model.signup.FIRST_NAME, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.signup.LAST_NAME, new { htmlAttributes = new { @class = "form-control", placeholder = "Last Name" } })
                                @Html.ValidationMessageFor(model => model.signup.LAST_NAME, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.signup.EMAIL, new { htmlAttributes = new { @class = "form-control emailSignup", placeholder = "johndoe@google.com"} })
                                @Html.ValidationMessageFor(model => model.signup.EMAIL, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.signup.PASSWORD, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" , @id= "txtPass" } })
                                @Html.ValidationMessageFor(model => model.signup.PASSWORD, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.signup.BIRTHDAY, new { htmlAttributes = new { @class = "form-control", placeholder = "Birthday", @type = "date", @max=string.Format("{0:yyyy-MM-dd}", DateTime.Now)} })
                                @Html.ValidationMessageFor(model => model.signup.BIRTHDAY, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.signup.CONFIRM_PASSWORD, new { htmlAttributes = new { @class = "form-control", placeholder = "Confirm Password", @id= "txtConfirmPass" } })
                                @Html.ValidationMessageFor(model => model.signup.CONFIRM_PASSWORD, "", new { @class = "text-danger", id="validationConPass"})
                                @Html.Display( "", new { @class = "text-info", id = "validationConPass2" })
                            </div>

                            <div class="col-md-6">
                                @Html.DropDownListFor(n => n.signup.COUNTRY_ID, Model.countryList, "--SELECT COUNTRY--", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.signup.COUNTRY_ID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.signup.MOBILE_NO, new { htmlAttributes = new { @class = "form-control", placeholder = "Phone Number" } })
                                @Html.ValidationMessageFor(model => model.signup.MOBILE_NO, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                <div>
                                    @Html.RadioButtonFor(model => model.signup.GENDER, 'M') @Html.Label("Male")
                                </div>
                                <div>
                                    @Html.RadioButtonFor(model => model.signup.GENDER, 'F') @Html.Label("Female")
                                </div>
                                <div>
                                    @Html.RadioButtonFor(model => model.signup.GENDER, 'U', new { @checked = "checked" }) @Html.Label("Unspecified")
                                </div>
                                @Html.ValidationMessageFor(model => model.signup.GENDER, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-offset-9">
                        <div class="form-group">
                            <div class="col-md-11 pull-right">
                                <input type="submit" value="Sign Up" class="btn-lg btn-primary" />
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")

    <script>
        var LoginAccountUrl = '@Url.Action("ValidateAccount", "Pastebook")';
        var HomeUrl = '@Url.Action("Home", "Pastebook")';
    </script>
    
    <script type="text/javascript" src="~/Scripts/LoginSignup.js"></script>
}
